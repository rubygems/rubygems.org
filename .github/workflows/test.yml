name: Tests
on:
  pull_request:
  push:
    branches:
      - master
permissions:
  contents: read

jobs:
  rails:
    strategy:
      fail-fast: false
      matrix:
        rubygems:
          - name: locked
            version: '3.4.9'
          - name: latest
            version: latest
        ruby_version: ['3.2.1']
    name: Rails tests (RubyGems ${{ matrix.rubygems.name }})
    runs-on: ubuntu-22.04
    env:
      RUBYGEMS_VERSION: ${{ matrix.rubygems.version }}
      # Fail hard when Toxiproxy is not running to ensure all tests (even Toxiproxy optional ones) are passing
      REQUIRE_TOXIPROXY: true
    steps:
    - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
    - name: Install and start services
      run: |
        docker-compose up -d
    - name: Wait for ES to boot
      run: |
        timeout 300 bash -c "until curl --silent --output /dev/null http://localhost:9200/_cat/health?h=st; do printf '.'; sleep 5; done; printf '\n'"
    - uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
      with:
        ruby-version: ${{ matrix.ruby_version }}
        bundler-cache: true
    - name: set rubygems version
      run: |
        if [ "$RUBYGEMS_VERSION" != "latest" ]; then
          gem update --system $RUBYGEMS_VERSION;
        else
          gem update --system
        fi
        gem --version
        bundle --version
    - name: Prepare environment
      run: |
        cp config/database.yml.sample config/database.yml
        bundle exec rake db:setup
    - name: Tests
      run: bin/rails test:all
    - name: Upload coverage to Codecov
      if: matrix.rubygems.name == 'locked' && (success() || failure())
      uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865 # v3.1.2

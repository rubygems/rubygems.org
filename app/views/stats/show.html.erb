<% @title, @title_url = @rubygem.name, rubygem_path(@rubygem) %>

<% if @rubygem.versions.size > 1 %>
  <%= select_tag :version_for_stats, options_for_select(stats_options(@rubygem), request.path) %>
<% end %>

<div id="markup">
  <%= simple_markup(@version.info) %>
</div>

<div class="statistics statistics-show clearfix">
  <div class="border">
    <%= t('.total_downloads', :count => content_tag(:span, number_with_delimiter(@downloads_total))).html_safe %>
  </div>

  <div class="border">
    <%= t('.daily_downloads', :count => content_tag(:span, number_with_delimiter(@downloads_today))).html_safe %>
  </div>

  <div class="border">
    <span><%= number_with_delimiter @rank %> / <%= number_with_delimiter @cardinality %></span>
    <% if params[:version_id] %>
      <%= t '.current_rank' %>
    <% else %>
      <%= t '.highest_rank' %>
    <% end %>
  </div>
</div>
<div class="border">
  <div class="meta">
    <div id='downloads_over_time' class="stats-graph">
      <%= downloads_over_time_chart(@versions) %>
    </div>
  </div>
</div>

<% content_for :javascript do %>
  <%= javascript_include_tag "raphael", "g.raphael", "g.line" %>
  <script type="text/javascript">
    $(document).ready(function() {
      $('#downloads_over_time img').hide();
      $('#downloads_over_time').height(430)
      var dates = <%= downloads_over_time_chart_dates.to_json.html_safe %>;
      var r = Raphael("downloads_over_time");
            
      var days = <%= (0..90).to_json.html_safe %>
      
      var versions = <%= downloads_over_time(@versions).map{|v| v[:counts] }.to_json.html_safe
       %>
       var labels = <%= downloads_over_time_labels.to_json.html_safe %>

       var fin  = function () {
         this.flag = r.g.popup(this.x, this.y, dates[this.axis] + ": " + this.value || "0").insertBefore(this);
       };
       var fout = function () {
         this.flag.animate({opacity: 0}, 300, function () {this.remove();});
       };

      chart = r.g.linechart(30, 20, 500, 400, days, versions, {'axis':'0 0 0 1'}).hover(fin, fout);
      yaxis = r.g.axis(40,410,480,0,90,3,0, labels);
      
      var raph = r
      var labels = <%= @versions.map(&:number).to_json.html_safe %>;
      chart.labels = raph.set();
      var x = 540; var h = (400 - (labels.length*10))/2;
      for( var i = 0; i < labels.length; ++i ) {
        var clr = chart.lines[i].attr("stroke");
        chart.labels.push(raph.set());
        chart.labels[i].push(raph.g["disc"](x + 5, h, 5)
                             .attr({fill: clr, stroke: "none"}));
        chart.labels[i].push(txt = raph.text(x + 20, h, labels[i])
                             .attr(raph.g.txtattr)
                             .attr({fill: "#000", "text-anchor": "start"}));
        h += chart.labels[i].getBBox().height * 1.2;
      };
    });
  </script>
<% end %>
